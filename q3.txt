I am iterating over all possible (dest, src) register pairs and trying to find the corresponding pop and mov gadgets using GadgetSearch.find() because we need to be flexible with our register choices to find the right gadget
Once I find the gadgets, I am constructing the payload. The payload consists of 135 bytes of padding, followed by the address of the first gadget (to pop the auth address to dest), then the auth address, the address of the second gadget (to pop 0x01 to src), the little endian constant 1, the address of the third gadget (to mov [dest], src), and finally the original return address of check_password(). This is because we need to move the address and the constant 1 to the appropriate registers using the stack.
Once I find the gadgets, I am constructing the payload. The payload consists of 135 bytes of padding, followed by the address of the first gadget (to pop the auth address to dest), then the auth address, the address of the second gadget (to pop 0x01 to src), the little endian constant 1, the address of the third gadget (to mov [dest], src), and finally the original return address of check_password(). This is because we need to move the address and the constant 1 to the appropriate registers using the stack.
